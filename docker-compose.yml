version: '3.8'

networks:
  fit_mate:
    driver: bridge

services:
  postgresql-auth:
    image: postgres:latest
    container_name: postgresql-auth
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: cksrb0402
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - fit_mate

  auth-service:
    image: auth-service:latest
    container_name: auth-service
    restart: on-failure
    depends_on:
      - postgresql-auth
    ports:
      - "8084:8080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - fit_mate

  ### kafka template #####################################################################################
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - fit_mate

  kafka-1:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka-1
    hostname: kafka-1
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://kafka-1:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT, PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    volumes:
      - ./init-kafka-topics.sh:/init-kafka-topics.sh
#      - ./kafka-data1:/var/lib/kafka/data
    networks:
      - fit_mate

  kafka-2:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka-2
    ports:
      - "9093:9093"
      - "29093:29093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:19093,EXTERNAL://kafka-2:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#    volumes:
##      - ./kafka-data2:/var/lib/kafka/data
    networks:
      - fit_mate
      
  kafka-3:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka-3
    ports:
      - "9094:9094"
      - "29094:29094"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:19094,EXTERNAL://kafka-3:9094,DOCKER://host.docker.internal:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#    volumes:
#      - ./kafka-data3:/var/lib/kafka/data
    networks:
      - fit_mate

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    container_name: kafka-ui
    restart: on-failure
    ports:
      - "10000:8080"
    environment:
      - KAFKA_CLUSTER_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:19092 # 1개만 등록하고 다 연동되는지 테스트
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    networks:
      - fit_mate
  cmak:
    image: hlebalbau/kafka-manager:3.0.0.5
    container_name: cmak
    restart: always
    ports:
      - "10001:9000"
    environment:
      - ZK_HOSTS=zookeeper:2181
      - "-Dcmak.zkhosts=zookeeper:2181"
      - "-DbasicAuthentication.enabled=true"
      - "-DbasicAuthentication.username=admin"
      - "-DbasicAuthentication.password=password"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    networks:
     - fit_mate

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:v2.3.7
    container_name: redpanda-console
    ports:
      - "10002:8080"
    environment:
      - KAFKA_BROKERS=kafka-1:19092 # 1개만 등록하고 다 연동되는지 테스트
    depends_on:
      - zookeeper
      - kafka-1
      - kafka-2
      - kafka-3
    networks:
      - fit_mate